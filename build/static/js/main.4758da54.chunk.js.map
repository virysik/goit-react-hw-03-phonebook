{"version":3,"sources":["App.styles.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/ContactList/ContactList.styles.js","components/ContactListElement/ContactListElement.styles.js","components/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Container","styled","div","Title","h1","TitleContacts","h2","Form","form","Input","input","Label","label","Button","button","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","onSubmit","props","preventDefault","resetFormInputs","this","onChange","type","autoComplete","pattern","title","required","Component","Filter","Ul","ul","Li","li","Span","span","ContactListElement","contactId","contactName","contactNumber","onDelete","onClick","ContactList","contactsArr","map","id","App","contacts","filter","handleFilterInputChange","addContact","contact","nanoid","normalizedName","toLowerCase","find","alert","prevState","getFilteredContact","normalazedFilter","includes","deleteContact","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredArr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4758da54.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  padding: 20px;\n  width: 420px;\n  background: #f2f2f0;\n  border: 4px double #1b3c59;\n  border-radius: 36px;\n  box-shadow: 4px 3px 20px rgba(27, 60, 89, 0.2);\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 40px;\n  color: #456173;\n`;\nexport const TitleContacts = styled.h2`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 30px;\n  color: #456173;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n  padding: 10px;\n  border: 2px dashed #456173;\n`;\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 42px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  padding: 6px 8px;\n  width: 130px;\n\n  font-size: 18px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #11bfae;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #11bfae;\n    background-color: #456173;\n  }\n`;\n","import { Component } from 'react'\nimport { Form, Label, Input, Button } from './ContactForm.styles'\nimport PropTypes from 'prop-types'\n\nclass ContactForm extends Component {\n  static propTypes = { onSubmit: PropTypes.func.isRequired }\n\n  state = { name: '', number: '' }\n\n  handleInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = (e) => {\n    const { onSubmit } = this.props\n    e.preventDefault()\n\n    onSubmit(this.state)\n    this.resetFormInputs()\n  }\n\n  resetFormInputs = () => {\n    this.setState({\n      name: '',\n      number: '',\n    })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <Input\n            onChange={this.handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            onChange={this.handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            autoComplete=\"off\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    )\n  }\n}\n\nexport default ContactForm\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 50px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\n","import { Label, Input } from './Filter.styles'\nimport PropTypes from 'prop-types'\n\nfunction Filter({ onChange }) {\n  return (\n    <Label>\n      Find contacts by name:\n      <Input onChange={onChange} type=\"text\" name=\"filter\"></Input>\n    </Label>\n  )\n}\n\nexport default Filter\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n","import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  margin: 0;\n  margin-top: 56px;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 4px;\n  color: #1b3c59;\n  font-size: 18px;\n`;\nexport const Button = styled.button`\n  margin-left: auto;\n  padding: 8px 16px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #1b3c59;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #456173;\n  }\n`;\nexport const Span = styled.span`\n  margin-right: 20px;\n`;\n","import { Li, Button, Span } from './ContactListElement.styles'\nimport { IoIosContact } from 'react-icons/io'\nimport PropTypes from 'prop-types'\n\nfunction ContactListElement({\n  contactId,\n  contactName,\n  contactNumber,\n  onDelete,\n}) {\n  return (\n    <Li>\n      <Span>\n        <IoIosContact />\n      </Span>\n      {`${contactName}: ${contactNumber}`}\n      <Button\n        type=\"button\"\n        onClick={() => {\n          onDelete(contactId)\n        }}\n      >\n        Delete\n      </Button>\n    </Li>\n  )\n}\n\nexport default ContactListElement\n\nContactListElement.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { Ul } from './ContactList.styles'\nimport ContactListElement from '../ContactListElement'\nimport PropTypes from 'prop-types'\n\nfunction ContactList({ contactsArr, onDelete }) {\n  return (\n    <Ul>\n      {contactsArr.map(({ id, name, number }) => {\n        return (\n          <ContactListElement\n            key={id}\n            contactId={id}\n            contactName={name}\n            contactNumber={number}\n            onDelete={onDelete}\n          />\n        )\n      })}\n    </Ul>\n  )\n}\n\nexport default ContactList\n\nContactList.propTypes = {\n  contactsArr: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { Component } from 'react'\nimport { nanoid } from 'nanoid'\nimport { Container, Title, TitleContacts } from './App.styles'\nimport { TiContacts } from 'react-icons/ti'\nimport { IoIosContacts } from 'react-icons/io'\nimport ContactForm from './components/ContactForm'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  handleFilterInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: nanoid(),\n    }\n    const normalizedName = name.toLowerCase()\n    const contactExists = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedName,\n    )\n\n    if (contactExists) {\n      alert(`${contact.name} is already in contacts`)\n      return\n    }\n\n    this.setState((prevState) => ({\n      contacts: [contact, ...prevState.contacts],\n    }))\n  }\n\n  getFilteredContact = () => {\n    const { contacts, filter } = this.state\n    const normalazedFilter = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalazedFilter),\n    )\n  }\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }))\n  }\n\n  render() {\n    const filteredArr = this.getFilteredContact()\n    return (\n      <Container>\n        <Title>\n          <TiContacts /> Phonebook\n        </Title>\n        <ContactForm onSubmit={this.addContact} />\n        <TitleContacts>\n          <IoIosContacts />\n          Contacts\n        </TitleContacts>\n        <Filter onChange={this.handleFilterInputChange} />\n\n        <ContactList contactsArr={filteredArr} onDelete={this.deleteContact} />\n      </Container>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}